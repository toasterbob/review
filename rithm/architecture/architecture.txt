Instructor: Matt Lane

Objectives
- Describe how the internet works
- History of web applications
- Explain terms:
  - HTTP
  - TCP/IP
  - DNS
  - Request/response cycle
- Describe components of an HTTP request/response

Internet - rules and standards so computers can communicate with each other
Servers were just remote file systems in the 90s

Hypertext Transfer Protocol - HTTP
FTP - uploading files to the server

web is stateless - by default it doesn't remember anything - data doesn't persist
request to request

database to preserve state

Browser only knows HTML, CSS, JS.  Servers are more flexible

Clients do not communicate directly with databases

Microservice architecture - each server manages a different service
Decentralize - easier to have different teams on the code base

Monolithic - one giant app

Uber/Lyft - cars microservice, payment, user information
JSON Web Token - JWT - used to persist authentication across different services



Domain Name System - DNS - phone book for the internet - browser might be cacheing the address
Entire network of DNS servers

Code.org How The Internet Works - video series

Curl - in command line - HTTP
curl https://www.rithmschool.com
curl https://www.rithmschool.com -v
v flag gives more information

response headers - envelope
response bodies - letter

robots.txt file - on websites
wayback machine - archives internet

pokeapi/co - Pokemon api

spotify web api

http status code 200 - success,
                 300 - redirects,
                 400 - client error - 404 most common,
                 500 - server error

                 101 - change in protocol

Protocols - HTTP, HTTPS, FTP, file, WS (web socket) - real time functionality
http.cat/304 - web cats

API - Application Program Interface

github repo - public-apis - todd motto 

AJAX - asynchronous and xml - don't really use xml anymore

Fun fun function videos on YouTube
CRUD - Create, Read, Update, Destroy
